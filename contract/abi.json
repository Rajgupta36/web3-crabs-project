    /**
    * This file was automatically generated by Stylus and represents a Rust program.
    * For more information, please see [The Stylus SDK](https://github.com/OffchainLabs/stylus-sdk-rs).
    */

    // SPDX-License-Identifier: MIT-OR-APACHE-2.0
    pragma solidity ^0.8.23;

    interface IInheritanceContract  {
        function constructor(address[] memory initial_beneficiaries) external payable;

        function addFunds() external payable;

        function addBeneficiary(address beneficiary) external;

        function removeBeneficiary(address beneficiary) external;

        function resetTimer() external;

        function lockShare() external;

        function redeem() external;

        function isExpired() external view returns (bool);

        function getBalance() external view returns (uint256);

        function getBeneficiaryCount() external view returns (uint256);

        function getLastReset() external view returns (uint256);

        function getPerBeneficiaryShare() external view returns (uint256);

        function hasClaimed(address beneficiary) external view returns (bool);

        function isShareLocked() external view returns (bool);
    }
